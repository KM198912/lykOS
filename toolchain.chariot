// Autoconf

source/autoconf {
    url: "https://ftp.gnu.org/gnu/autoconf/autoconf-2.72.tar.gz"
    b2sum: "48fff54704176cbf2642230229c628b75c43ef3f810c39eea40cae91dd02e1203d04a544407de96f9172419a94b952865909d969d9e9b6c10879a9d9aeea5ad0"
    type: "tar.gz"
    patch: "patches/autoconf.diff"
}

source/autoconf_2.69 {
    url: "https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz"
    b2sum: "7e8a513bbfcabadad1577919c048cc05ca0a084788850b42570f88afc2fa9c25fb32277412f135b81ba1c0d8079465a6b581d2d78662c991d2183b739fac407c"
    type: "tar.gz"
}

tool/autoconf {
    dependencies: [ source/autoconf ]
    configure: <sh>
        $SOURCES_DIR/autoconf/configure --prefix=$PREFIX
    </sh>
    build: <sh>
        make -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install
    </sh>
}

tool/autoconf_2.69 {
    dependencies: [ source/autoconf_2.69 ]
    configure: <sh>$SOURCES_DIR/autoconf_2.69/configure --prefix=$PREFIX</sh>
    build: <sh>
        make -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install
    </sh>
}

// Automake

source/automake {
    url: "https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz"
    b2sum: "5ccdcbe2d3deb2b0baed4a8590b07714cd7098fbda251afebe83232ed03f4db84abbe023cf0544622dbc5137254347273247428eb5420564a167b86de95d113e"
    type: "tar.gz"
    dependencies: [ source/autoconf ]
    regenerate: <sh>
        cp $SOURCES_DIR/autoconf/build-aux/config.guess ./lib
        cp $SOURCES_DIR/autoconf/build-aux/config.sub ./lib
    </sh>
}

tool/automake {
    dependencies: [ source/automake tool/autoconf image/gcc ]
    configure: <sh>
        $SOURCES_DIR/automake/configure --prefix=$PREFIX
    </sh>
    build: <sh>
        make -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install-strip
    </sh>
}

// Libtool

source/libtool {
    url: "https://ftp.gnu.org/gnu/libtool/libtool-2.5.4.tar.xz"
    b2sum: "47de3c49a690d44d7ddd5e3b5e4090c91dc5fbb9c40fc4a3963e150fb7329326ee3e21b8c149974726171c4b0380028e0efc7a369c4f04357eea46f69852e1cc"
    type: "tar.xz"
    dependencies: [ tool/autoconf tool/automake ]
    regenerate: <sh>
        LIBTOOLIZE=true autoreconf -fvi
    </sh>
}

tool/libtool {
    dependencies: [ source/libtool tool/autoconf tool/automake image/help2man image/build-essential ]
    configure: <sh>
        $SOURCES_DIR/libtool/configure --prefix=$PREFIX
    </sh>
    build: <sh>
        make -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install-strip
    </sh>
    mutable_sources: "true"
}

// Binutils

source/binutils {
    url: "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.gz"
    b2sum: "f676664064380a9218bb031e68b3b8c7324ae8079d26f9940d5b411396f7dac3843e02b6ae483c57c2a13fda5ba95c30a33920e39866cc82cc39ad53c25aa0ec"
    type: "tar.gz"
    patch: "patches/binutils.diff"
    dependencies: [ source/support source/libtool tool/autoconf_2.69 tool/automake tool/libtool ]
    regenerate: <sh>
        $SOURCES_DIR/support/reconfigure.sh -I"$(realpath ./config)"
        cp -pv $SOURCES_DIR/libtool/build-aux/{config.sub,config.guess,install-sh} libiberty/
    </sh>
}

tool/binutils {
    dependencies: [ source/binutils image/build-essential ]
    configure: <sh>
        $SOURCES_DIR/binutils/configure \
            --with-sysroot=$SYSROOT_DIR \
            --prefix=$PREFIX \
            --target=x86_64-lykos \
            --enable-targets=x86_64-elf,x86_64-pe \
            --disable-nls \
            --disable-werror
    </sh>
    build: <sh>
        PATH="$PATH:/usr/bin/core_perl" make -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install-strip
    </sh>
}

// GCC

source/gcc_host {
    url: "https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.gz"
    b2sum: "7d429d2803b88d8cc9da460fd3a0bd0b888fbe0cc0338e7ed04c71599bd87b475836c8a8fb563338ee0f83e2b4d988427c063ae6c2bd0fc3ab30b07a4e9e7cd0"
    type: "tar.gz"
    patch: "patches/gcc-host.diff"
    dependencies: [ source/support source/libtool tool/autoconf_2.69 tool/automake tool/libtool ]
    regenerate: <sh>
        ./contrib/download_prerequisites

        rm -rf gettext*

        $SOURCES_DIR/support/reconfigure.sh -I"$(realpath ./config)"

        cp -pv $SOURCES_DIR/libtool/build-aux/{config.sub,config.guess,install-sh} libiberty/
        cp -pv $SOURCES_DIR/libtool/build-aux/{config.sub,config.guess,install-sh} libgcc/
    </sh>
}

tool/gcc_bootstrap {
    dependencies: [ source/gcc_host *tool/binutils package/mlibc_headers image/build-essential *image/libisl23 *image/libmpc3 ]
    configure: <sh>
        CFLAGS="-O2" CXXFLAGS="-O2" $SOURCES_DIR/gcc_host/configure \
            --prefix=$PREFIX \
            --target=x86_64-lykos \
            --with-sysroot=$SYSROOT_DIR \
            --enable-languages=c,c++ \
            --disable-nls \
            --disable-multilib \
            --disable-shared \
            --enable-initfini-array \
            --without-headers \
            --without-newlib
    </sh>
    build: <sh>
        export PATH="$PATH:/usr/bin/core_perl"
        make -j$THREAD_COUNT inhibit_libc=true all-gcc
        make -j$THREAD_COUNT inhibit_libc=true all-target-libgcc
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install-gcc
        DESTDIR=$INSTALL_DIR make install-target-libgcc
    </sh>
    mutable_sources: "true"
}

tool/gcc {
    dependencies: [ source/gcc_host *tool/binutils *package/mlibc_headers *package/mlibc image/build-essential *image/libisl23 *image/libmpc3 ]
    configure: <sh>
        CFLAGS="-O2" CXXFLAGS="-O2" $SOURCES_DIR/gcc_host/configure \
            --prefix=$PREFIX \
            --target=x86_64-lykos \
            --with-sysroot=$SYSROOT_DIR \
            --enable-languages=c,c++ \
            --disable-nls \
            --disable-multilib \
            --enable-initfini-array
    </sh>
    build: <sh>
        export PATH="$PATH:/usr/bin/core_perl"
        make -j$THREAD_COUNT all-gcc
        make -j$THREAD_COUNT all-target-libgcc
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install-gcc
        DESTDIR=$INSTALL_DIR make install-target-libgcc
    </sh>
}

// Pkgconf

source/pkgconf {
    url: "https://github.com/pkgconf/pkgconf/archive/refs/tags/pkgconf-2.4.3.tar.gz"
    b2sum: "031ae702ff002198c6ea700a4f7f73cf82f19be3827a448929334ebae5f972b0d973e2c43bd12b4a8a8e6d0c187a006fa36d5303b36b2965e1046b26f50a51e7"
    type: "tar.gz"
    dependencies: [ tool/autoconf tool/automake tool/libtool ]
    regenerate: <sh>
        libtoolize -cfvi && autoreconf -fvi
    </sh>
}

tool/pkgconf {
    dependencies: [ source/pkgconf tool/autoconf tool/automake tool/libtool image/gcc-multilib ]
    configure: <sh>
        $SOURCES_DIR/pkgconf/configure --prefix=$PREFIX
    </sh>
    build: <sh>
        make -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR make install-strip
        install -d $INSTALL_DIR$PREFIX/share/pkgconfig/personality.d

        PERSONALITY_FILE="$INSTALL_DIR$PREFIX/share/pkgconfig/personality.d/x86_64-lykos.personality"
        echo "Triplet: x86_64-lykos" >> $PERSONALITY_FILE
        echo "SysrootDir: $SYSROOT_DIR" >> $PERSONALITY_FILE
        echo "DefaultSearchPaths: $SYSROOT_DIR/usr/lib/pkgconfig:$SYSROOT_DIR/usr/share/pkgconfig" >> $PERSONALITY_FILE
        echo "SystemIncludePaths: $SYSROOT_DIR/usr/include" >> $PERSONALITY_FILE
        echo "SystemLibraryPaths: $SYSROOT_DIR/usr/lib" >> $PERSONALITY_FILE

        ln -s pkgconf $INSTALL_DIR$PREFIX/bin/x86_64-lykos-pkg-config
    </sh>
}

// Mlibc

source/mlibc {
    type: "local"
    url: "mlibc"
}

package/mlibc_headers {
    dependencies: [ source/mlibc source/support tool/pkgconf image/meson ]
    configure: <sh>
        meson setup \
            --cross-file $SOURCES_DIR/mlibc/lykos.cross-file \
            --prefix=$PREFIX \
            --buildtype=release \
            -Dheaders_only=true \
            -Dlinux_option=disabled \
            $SOURCES_DIR/mlibc
    </sh>
    build: <sh>
        ninja -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR ninja install
    </sh>
}

package/mlibc {
    dependencies: [
        source/mlibc
        source/support
        tool/gcc_bootstrap
        tool/pkgconf
        package/mlibc_headers
        image/meson
    ]
    configure: <sh>
        meson setup \
            --cross-file $SOURCES_DIR/mlibc/lykos.cross-file \
            --prefix=$PREFIX \
            --libdir=lib \
            --buildtype=debug \
            -Dno_headers=true \
            -Ddefault_library=both \
            -Dlinux_option=disabled \
            $SOURCES_DIR/mlibc
    </sh>
    build: <sh>
        ninja -j$THREAD_COUNT
    </sh>
    install: <sh>
        DESTDIR=$INSTALL_DIR ninja install
    </sh>
}
